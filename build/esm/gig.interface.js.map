{"version":3,"file":"gig.interface.js","names":[],"sources":["../../src/gig.interface.ts"],"sourcesContent":["import { ObjectId } from \"mongoose\";\nimport { IRatingCategories, IReviewDocument } from \"./review.interface\";\nimport { ISellerDocument } from \"./seller.interface\";\n\nexport type GigType =\n  | string\n  | string[]\n  | number\n  | unknown\n  | undefined;\n\nexport interface ICreateGig extends Record<string, GigType> {\n  // [key: string]: string | string[] | number | undefined;\n  sellerId?: string;\n  profilePicture?: string;\n  title: string;\n  categories: string;\n  description: string;\n  subCategories: string[];\n  tags: string[];\n  price: number;\n  coverImage: string;\n  expectedDelivery: string;\n  basicTitle: string;\n  basicDescription: string;\n}\n\nexport interface ISellerGig {\n  _id?: string | ObjectId;\n  // this \"id\" property is used because elastcisearch does not accept a key with an underscore \"_id\"\n  // elasticsearch has _id as a reserved field name\n  id?: string | ObjectId;\n  sellerId?: string | ObjectId;\n  title: string;\n  username?: string;\n  profilePicture?: string;\n  email?: string;\n  description: string;\n  active?: boolean;\n  categories: string;\n  subCategories: string[];\n  tags: string[];\n  ratingsCount?: number; // make sure to add this to elasticsearch as a double\n  ratingSum?: number; // make sure to add this to elasticsearch as a double\n  ratingCategories?: IRatingCategories;\n  expectedDelivery: string;\n  basicTitle: string;\n  basicDescription: string;\n  price: number;\n  coverImage: string;\n  createdAt?: Date | string;\n  sortId?: number;\n  // this is added here because we will use the json format of the document\n  // at some point instead of the Mongoose document\n  // the json object which will contain the virtual field \"id\" without the field \"_id\" will be added to elasticsearch\n  // because \"_id\" is a reserved field name in elasticsearch.\n  toJSON?: () => unknown;\n}\n\nexport interface IGigContext {\n  gig: ISellerGig;\n  seller: ISellerDocument;\n  isSuccess?: boolean;\n  isLoading?: boolean;\n}\n\nexport interface IGigsProps {\n  type?: string;\n  gig?: ISellerGig;\n}\n\nexport interface IGigCardItems {\n  gig: ISellerGig;\n  linkTarget: boolean;\n  showEditIcon: boolean;\n}\n\nexport interface ISelectedBudget {\n  minPrice: string;\n  maxPrice: string;\n}\n\nexport interface IGigViewReviewsProps {\n  showRatings: boolean;\n  reviews?: IReviewDocument[];\n}\n\nexport interface IGigInfo {\n  total: number | string;\n  title: string;\n  bgColor: string;\n}\n\nexport interface IGigTopProps {\n  gigs: ISellerGig[];\n  title?: string;\n  subTitle?: string;\n  category?: string;\n  width: string;\n  type: string;\n}\n"],"mappings":"","ignoreList":[]}