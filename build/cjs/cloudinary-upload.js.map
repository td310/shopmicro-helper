{"version":3,"file":"cloudinary-upload.js","names":["_cloudinary","_interopRequireDefault","require","e","__esModule","default","uploads","file","public_id","overwrite","invalidate","Promise","resolve","cloudinary","v2","uploader","upload","resource_type","error","result","uploadVideos","chunk_size"],"sources":["../../src/cloudinary-upload.ts"],"sourcesContent":["import cloudinary, {UploadApiErrorResponse, UploadApiResponse} from 'cloudinary';\n\nexport function uploads(\n    file: string, \n    public_id?: string,\n    overwrite?: boolean,\n    invalidate?: boolean,\n): Promise<UploadApiResponse | UploadApiErrorResponse | undefined> {\n    return new Promise((resolve) => {\n        cloudinary.v2.uploader.upload(\n            file,\n            {\n                public_id,\n                overwrite,\n                invalidate,\n                resource_type: 'auto',\n            },\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\n                if (error) {\n                    resolve(error);\n                } else {\n                    resolve(result);\n                }\n            },\n        );\n    });\n}\n\nexport function uploadVideos(\n    file: string, \n    public_id?: string,\n    overwrite?: boolean,\n    invalidate?: boolean,\n): Promise<UploadApiResponse | UploadApiErrorResponse | undefined> {\n    return new Promise((resolve) => {\n        cloudinary.v2.uploader.upload(\n            file,\n            {\n                public_id,\n                overwrite,\n                invalidate,\n                chunk_size: 6000000,\n                resource_type: 'video',\n            },\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\n                if (error) {\n                    resolve(error);\n                } else {\n                    resolve(result);\n                }\n            },\n        );\n    });\n}"],"mappings":";;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAiF,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE1E,SAASG,OAAOA,CACnBC,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC2C;EAC/D,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BC,mBAAU,CAACC,EAAE,CAACC,QAAQ,CAACC,MAAM,CACzBT,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVO,aAAa,EAAE;IACnB,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAE;QACPN,OAAO,CAACM,KAAK,CAAC;MAClB,CAAC,MAAM;QACHN,OAAO,CAACO,MAAM,CAAC;MACnB;IACJ,CACJ,CAAC;EACL,CAAC,CAAC;AACN;AAEO,SAASC,YAAYA,CACxBb,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC2C;EAC/D,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BC,mBAAU,CAACC,EAAE,CAACC,QAAQ,CAACC,MAAM,CACzBT,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVW,UAAU,EAAE,OAAO;MACnBJ,aAAa,EAAE;IACnB,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAE;QACPN,OAAO,CAACM,KAAK,CAAC;MAClB,CAAC,MAAM;QACHN,OAAO,CAACO,MAAM,CAAC;MACnB;IACJ,CACJ,CAAC;EACL,CAAC,CAAC;AACN","ignoreList":[]}